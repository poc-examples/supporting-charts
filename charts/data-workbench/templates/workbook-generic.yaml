{{- if not .Values.enableCUDA }}
apiVersion: kubeflow.org/v1
kind: Notebook
metadata:
  annotations:
    notebooks.opendatahub.io/inject-oauth: 'true'
    opendatahub.io/image-display-name: Standard Data Science
    notebooks.opendatahub.io/oauth-logout-url: https://rhods-dashboard-redhat-ods-applications.apps.{{ .Values.domain }}/projects/{{ .Values.namespace }}?notebookLogout={{ .Values.notebookName }}
    opendatahub.io/accelerator-name: ""
    openshift.io/description: ""
    openshift.io/display-name: "{{ .Values.notebookName }}"
    opendatahub.io/username: 'kube:admin'
  labels:
    opendatahub.io/dashboard: "true"
    opendatahub.io/odh-managed: "true"
  name: "{{ .Values.notebookName }}"
spec:
  template:
    spec:
      containers:
      - name: "{{ .Values.notebookName }}"
        env:
        - name: NOTEBOOK_ARGS
          value: |-
            --ServerApp.port=8888
                              --ServerApp.token=''
                              --ServerApp.password=''
                              --ServerApp.base_url=/notebook/{{ .Values.namespace }}/{{ .Values.notebookName }}
                              --ServerApp.quit_button=False
                              --ServerApp.tornado_settings={"user":"kube-3aadmin","hub_host":"https://rhods-dashboard-redhat-ods-applications.apps.{{ .Values.domain }}","hub_prefix":"/projects/{{ .Values.namespace }}"}
        - name: JUPYTER_IMAGE
          value: 'image-registry.openshift-image-registry.svc:5000/redhat-ods-applications/s2i-generic-data-science-notebook:2024.1'
        - name: PIP_CERT
          value: /etc/pki/tls/custom-certs/ca-bundle.crt
        - name: REQUESTS_CA_BUNDLE
          value: /etc/pki/tls/custom-certs/ca-bundle.crt
        - name: SSL_CERT_FILE
          value: /etc/pki/tls/custom-certs/ca-bundle.crt
        - name: PIPELINES_SSL_SA_CERTS
          value: /etc/pki/tls/custom-certs/ca-bundle.crt
        - name: GIT_SSL_CAINFO
          value: /etc/pki/tls/custom-certs/ca-bundle.crt
        envFrom:
        - secretRef:
            name: "aws-connection-{{ .Values.dataConnectionName }}"
        image: 'image-registry.openshift-image-registry.svc:5000/redhat-ods-applications/s2i-generic-data-science-notebook:2024.1'
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /notebook/{{ .Values.namespace }}/{{ .Values.notebookName }}/api
            port: notebook-port
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        ports:
        - containerPort: 8888
          name: notebook-port
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /notebook/{{ .Values.namespace }}/{{ .Values.notebookName }}/api
            port: notebook-port
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: "2"
            memory: 8Gi
          requests:
            cpu: "1"
            memory: 8Gi
        volumeMounts:
        - mountPath: /opt/app-root/src
          name: "{{ .Values.notebookName }}"
        - mountPath: /dev/shm
          name: shm
        - mountPath: /etc/pki/tls/custom-certs/ca-bundle.crt
          name: trusted-ca
          readOnly: true
          subPath: ca-bundle.crt
        workingDir: /opt/app-root/src
      enableServiceLinks: false
      serviceAccountName: "{{ .Values.notebookName }}"
      volumes:
        - name: "{{ .Values.notebookName }}"
          persistentVolumeClaim:
            claimName: "{{ .Values.notebookName }}"
        - emptyDir:
            medium: Memory
          name: shm
        - configMap:
            items:
            - key: ca-bundle.crt
              path: ca-bundle.crt
            name: workbench-trusted-ca-bundle
            optional: true
          name: trusted-ca
        - name: oauth-config
          secret:
            defaultMode: 420
            secretName: "{{ .Values.notebookName }}-oauth-config"
        - name: tls-certificates
          secret:
            defaultMode: 420
            secretName: "{{ .Values.notebookName }}-tls"
{{- end }}